{"version":3,"sources":["Images/open-book.png","Images/Desk Live Sharing.png","components/Navbar.js","components/Footer.js","components/Home.js","contexts/AuthContext.js","components/SignIn.js","components/CreateWall.js","components/PostWall.js","components/SearchTopic.js","components/Wall.js","events.js","components/Calendar.js","components/Members.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","role","aria-label","src","require","width","height","id","to","class","Footer","Home","type","placeholder","AuthContext","createContext","SignIn","props","CreateWall","useState","modalIsOpen","setModalIsOpen","title","setTitle","body","setBody","category","setCategory","zoomLink","setZoomLink","onClick","isOpen","onRequestClose","htmlFor","rows","onChange","e","target","value","data","axios","post","posts","setPosts","useEffect","get","then","res","console","log","JSON","stringify","map","href","SearchTopic","Wall","PostWall","allDay","start","Date","end","localizer","momentLocalizer","moment","allViews","Object","keys","Views","k","ColoredDateCellWrapper","children","React","cloneElement","Children","only","style","backgroundColor","Basic","events","views","step","showMultiDayTimes","components","timeSlotWrapper","getNow","max","dates","Members","App","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ddc84ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/open-book.343acb34.png\";","module.exports = __webpack_public_path__ + \"static/media/Desk Live Sharing.b7a2a34f.png\";","import React from 'react';\nimport { Link, Router, BrowserRouter } from 'react-router-dom';\n\nconst Navbar = () => {\n\n    return (\n        <div>\n            <nav className=\"navbar is-info\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"container nav-comp\">\n                    <div className=\"open-book\">\n                        <img src={require(\"../Images/open-book.png\")} width='80%' height=\"100%\" />\n                    </div>\n                    <div id=\"navbar-main\">\n                        <Link to = \"/\"><div id=\"logo-name\">The Study Wall</div></Link>\n                        <div className = \"columns\">\n                            <Link to = \"/signin\" className=\"column pages\">\n                                  Sign In\n                            </Link>\n                            <Link to = \"/wall\" className=\"column pages\">\n                                    Find a Wall\n                            </Link>\n                        </div>\n                    </div>\n                    <div class=\"open-book\">\n                        <img src={require(\"../Images/open-book.png\")} width='80%' height=\"100%\" />\n                    </div>\n                </div>\n            </nav>\n        </div>);\n};\n\nexport default Navbar;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = () => {\n\n    return (\n        <div id = \"footer\">\n            <div className = \"container\">\n                <br/>\n                The Study Wall, an app made by Herney, Josephine, and Nick.\n            </div>\n        </div>);\n};\n\nexport default Footer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <div className = \"container\">\n            <br/>\n            <h1 className = \"info\">To access the study wall and all its knowledge, please sign up below!</h1>\n            <h2 className = \"info\">Returning learners, please sign in</h2>\n            <br/>\n            <input className = \"input\" type = \"text\" placeholder = \"Name\"></input>\n            <br/><br/>\n            <input className = \"input\" type = \"email\" placeholder = \"Email\"></input>\n            <br/><br/>\n            <input className = \"input\" type = \"password\" placeholder = \"Password\"></input>\n            <br/><br/>\n            <Link to = \"/members\">\n                <button className = \"button is-info\" id = \"sign-up-btn\">\n                    Sign Up\n                </button>\n            </Link>\n            <br/><br/>\n            <img src = {require(\"../Images/Desk Live Sharing.png\")} />\n        </div>\n            \n    );\n};\n\nexport default Home;\n","import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}","import React, {useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from \"../contexts/AuthContext\";\n\n\n\nexport const SignIn = (props) => {\n\n    return ( \n    <div>\n        <div className = \"container\">\n            <h2 className = \"signing-in\">Input your info to Sign In</h2>\n            <br/><br/>\n            <input className = \"input\" type = \"email\" placeholder = \"Email\"></input>\n            <br/><br/>\n            <input className = \"input\" type = \"password\" placeholder = \"Password\"></input>\n            <br/><br/>\n            <Link to = \"/members\">\n                <button className = \"button is-info\" id = \"signin-btn\">\n                    Sign In\n                </button>\n            </Link>\n            <br/>  \n        </div>\n    </div>\n    );\n};\n\nexport const Login = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n  \n    function postLogin() {\n      axios.post(\"/Signin\", {\n        userName,\n        password\n      }).then(result => {\n        if (result.status === 200) {\n          setAuthTokens(result.data);\n          setLoggedIn(true);\n        } else {\n          setIsError(true);\n        }\n      }).catch(e => {\n        setIsError(true);\n      });\n    }\n  \n    if (isLoggedIn) {\n      return <Redirect to=\"/members\" />;\n    }\n  \n    // return (\n    //   <Card>\n        \n    //     <Form>\n    //       <Input\n    //         type=\"username\"\n    //         value={userName}\n    //         onChange={e => {\n    //           setUserName(e.target.value);\n    //         }}\n    //         placeholder=\"email\"\n    //       />\n    //       <Input\n    //         type=\"password\"\n    //         value={password}\n    //         onChange={e => {\n    //           setPassword(e.target.value);\n    //         }}\n    //         placeholder=\"password\"\n    //       />\n    //       <Button onClick={postLogin}>Sign In</Button>\n    //     </Form>\n        \n    //       { isError &&<Error>The username or password provided were incorrect!</Error> }\n    //   </Card>\n    //);\n  }\n  \n\n\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport axios from 'axios';\n\nlet submitToBackend = (data) => axios.post(\"/api/posts\", data);\n\nconst CreateWall = () => {\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [category, setCategory] = useState(\"\")\n    const [zoomLink, setZoomLink] = useState(\"\")\n\n\n\n    return (\n        <div className=\"container\">\n            <div className='CreateWall'>\n                <button className=\"button is-info\" onClick={() => setModalIsOpen(true)}> Create Wall</button>\n                <Modal className=\"create-modal\" isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\n                    <div className=\"column is-1\"></div>\n                    <div className=\"column is-10\">\n                        <form>\n                            <div className=\"form-control\">\n                                <label> Select Study Course:\n                                        <br />\n                                    <div className=\"form-control\">\n                                        <label htmlFor=\"description\">Title:</label>\n                                        <br />\n                                        <textarea id=\"wall-title\" rows=\"1\" onChange={e => setTitle(e.target.value)}></textarea>\n                                    </div>\n                                    <br />\n                                    <select id=\"select-topic\" onChange={e => setCategory(e.target.value)} >\n                                        <option value=\"HTML\">Week 1 : HTML</option>\n                                        <option value=\"CSS\">Week 2 : CSS</option>\n                                        <option value=\"JavaScript\">Week 3 : Java Script</option>\n                                        <option value=\"WebAPIs\">Week 4 : Web APIs</option>\n                                        <option value=\"ThirdPartyAPIs\">Week 5 : Third Party APIs</option>\n                                        <option value=\"ServerSideAPIs\">Week 6 : Server Side APIs</option>\n                                        <option value=\"Project1\">Week 7 : Project 1</option>\n                                        <option value=\"Project1Contd\">Week 8 : Project 1 Continued</option>\n                                        <option value=\"NodeJS\">Week 9 : Node.JS</option>\n                                        <option value=\"OOP\">Week 10 : OOP</option>\n                                        <option value=\"Express\">Week 11 : Express</option>\n                                        <option value=\"MySQL\">Week 12 : MySQL</option>\n                                        <option value=\"MVC\">Week 13 : MVC</option>\n                                        <option value=\"FullStack\">Week 14 : Full Stack</option>\n                                        <option value=\"Project2\">Week 15 : Project 2</option>\n                                        <option value=\"Project2Contd\">Week 16 : Project 2 Continued</option>\n                                        <option value=\"NoSQL\">Week 17 : NoSQL</option>\n                                        <option value=\"PWA\">Week 18 : PWA</option>\n                                        <option value=\"React\">Week 19 : React</option>\n                                        <option value=\"State\">Week 20 : State</option>\n                                        <option value=\"MERN\">Week 21 : MERN</option>\n                                        <option value=\"ComputerScience\">Week 22 : Computer Science</option>\n                                    </select>\n                                </label>\n                            </div>\n                            <div className=\"form-control\">\n                                <label htmlFor=\"description\">Description:</label>\n                                <br />\n                                <textarea id=\"description\" rows=\"5\" onChange={e => setBody(e.target.value)}></textarea>\n                            </div>\n                            <div className=\"form-control\">\n                                <label htmlFor=\"zoom-link\">Zoom Link (optional):</label>\n                                <br />\n                                <textarea id=\"zoom-link\" rows=\"1\" onChange={e => setZoomLink(e.target.value)}></textarea>\n                            </div>\n                            <div className=\"form-control\">\n                                <label htmlFor=\"date\">Study Date:</label>\n                                <br />\n                                <input type=\"datetime-local\" id=\"date\"></input>\n                            </div>\n                        </form>\n                    </div>\n                    <br />\n                    <div className=\"column is-11\">\n                        <div className=\"cw-submit\">\n                            <button className=\"button is-info\" onClick={() => {submitToBackend({ zoomLink, title, body, category }); setModalIsOpen(false)}}>Submit</button>\n                        </div>\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n}\nexport default CreateWall;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default () => {\n    let [posts, setPosts] = useState([])\n\n    // use useEffect to talk to our API and get the posts that have been posted\n    useEffect(() => {\n        function fetchData() {\n            axios.get(\"/api/posts\").then((res) => {\n                console.log(JSON.stringify(res, null, 2));\n                setPosts(res.data)\n            })\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <div className=\"post-wall\">\n            Study Wall Posts\n            <br/><br/>\n            <ul>\n                {posts.map(post => (\n                    <div className=\"columns\">\n                        <div className=\"column is-1\"></div>\n                        <div className=\"posted-wall column is-9\">\n                            <h3>{post.title}</h3>\n                            <h4><i>{post.category}</i></h4>\n                            <p>{post.body}</p>\n                            {post.zoomLink ? <a href={post.zoomLink}>Zoom Meeting Link</a> : \"\"}\n                        </div>\n                        <div className = \"column is-1\"></div>\n                    </div>\n                )\n                )}\n            </ul>\n            <br/>\n        </div>\n        \n    )\n}","import React from 'react';\n\nconst SearchTopic = () => {\n    return (\n        <label className = \"dropdown\"> Search Study Topic:   \n        <select>\n            <option value=\"html\">Week 1 : HTML</option>\n            <option value=\"css\">Week 2 : CSS</option>\n            <option value=\"javaScrip\">Week 3 : Java Script</option>\n            <option value=\"webAPIs\">Week 4 : Web APIs</option>\n            <option value=\"thirdPartAPIs\">Week 5 : Third Party APIs</option>\n            <option value=\"serverSideAPIs\">Week 6 : Server Side APIs</option>\n            <option value=\"project1\">Week 7 : Project 1</option>\n            <option value=\"project1Contd\">Week 8 : Project 1 Continued</option>\n            <option value=\"nodeJS\">Week 9 : Node.JS</option>\n            <option value=\"opp\">Week 10 : OOP</option>\n            <option value=\"express\">Week 11 : Express</option>\n            <option value=\"mySQL\">Week 12 : MySQL</option>\n            <option value=\"mvc\">Week 13 : MVC</option>\n            <option value=\"fullStack\">Week 14 : Full Stack</option>\n            <option value=\"project2\">Week 15 : Project 2</option>\n            <option value=\"project2Contd\">Week 16 : Project 2 Continued</option>\n            <option value=\"noSQL\">Week 17 : NoSQL</option>\n            <option value=\"pwa\">Week 18 : PWA</option>\n            <option value=\"react\">Week 19 : React</option>\n            <option value=\"state\">Week 20 : State</option>\n            <option value=\"mern\">Week 21 : MERN</option>\n            <option value=\"computerScience\">Week 22 : Computer Science</option>\n\n        </select>\n        </label>\n    )\n}\n\nexport default SearchTopic;","import React from 'react';\nimport CreateWall from \"./CreateWall\";\nimport PostWall from \"./PostWall\";\nimport SearchTopic from \"./SearchTopic\";\n\nconst Wall = () => {\n    return (\n        <div className=\"container\">\n            <br/>\n            <div className=\"columns\">\n                <div className=\"search column is-10\">\n                    <SearchTopic />\n                </div>\n                <div className=\"column\">\n                    <CreateWall />\n                </div>\n            </div>\n            <div className = \"columns\">\n                <div className = \"column is-12\">\n                    <PostWall />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Wall;","//const now = new Date()\n\nexport default [\n  {\n    id: 0,\n    title: 'All Day Event very long title',\n    allDay: true,\n    start: new Date(2020, 8, 2),\n    end: new Date(2020, 8, 2),\n  },\n  {\n    id: 1,\n    title: 'Long Event',\n    start: new Date(2020, 8, 7),\n    end: new Date(2020, 8, 10),\n  },\n\n  {\n    id: 2,\n    title: 'DTS STARTS',\n    start: new Date(2020, 8, 13, 0, 0, 0),\n    end: new Date(2020, 8, 20, 0, 0, 0),\n  }]","import React from 'react'\nimport { Calendar, Views, momentLocalizer } from 'react-big-calendar'\nimport events from '../events'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n// import BigCalendar from 'react-big-calendar'\nimport moment from 'moment';\n\nimport * as dates from '../utils/dates'\nconst localizer = momentLocalizer(moment)\n\nlet allViews = Object.keys(Views).map(k => Views[k])\n\nconst ColoredDateCellWrapper = ({ children }) =>\n  React.cloneElement(React.Children.only(children), {\n    style: {\n      backgroundColor: 'lightblue',\n    },\n  })\n\nlet Basic = (props) => (\n  <Calendar\n    events={events}\n    views={allViews}\n    step={60}\n    showMultiDayTimes\n    components={{\n      timeSlotWrapper: ColoredDateCellWrapper,\n    }}\n    localizer={localizer}\n    getNow={() => new Date()}\n    max={dates.add(dates.endOf(new Date(), 'day'), -1, 'hours')}\n  />\n)\n\nexport default Basic","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MyCalender from \"./Calendar\"\n\nconst Members = () => {\n    return (\n       <div className = \"container calendar\">\n           <MyCalender />\n       </div>\n    );\n};\n\nexport default Members;","import React from 'react';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\n// import MyCalendar from './components/Calendar';     \nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport {SignIn} from './components/SignIn';\nimport Wall from './components/Wall';\nimport Members from './components/Members';\n//import SearchTopic from './components/SearchTopic';\n//import PrivateRoute from './components/PrivateRoute';\nimport {AuthContext} from './contexts/AuthContext';\nfunction App() {\n  return (\n    <div className = \"App\">\n      <AuthContext.Provider value={false}>\n      <Router>\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path = \"/members\" component = {Members} />\n          <Route path=\"/wall\" component={Wall} />\n          \n        </Switch>\n      </Router>\n      </AuthContext.Provider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}